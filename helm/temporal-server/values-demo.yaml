# Demo environment values for Temporal Helm chart
global:
  image:
    repository: temporalio/server
    tag: 1.22.0
    pullPolicy: IfNotPresent

server:
  replicaCount: 1
  
  # Resource allocation for demo environment
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  
  # Environment-specific configuration
  config:
    persistence:
      default:
        driver: sql
        sql:
          driver: postgres
          host: temporal-db-service  # Points to Cloud SQL Proxy
          port: 5432
          database: temporal
          user: temporal
          password: ${DB_PASSWORD}  # From Secret Manager
          maxConns: 20
          maxConnLifetime: 1h
      
      visibility:
        driver: sql
        sql:
          driver: postgres
          host: temporal-db-service
          port: 5432
          database: temporal_visibility
          user: temporal
          password: ${DB_PASSWORD}
          maxConns: 10
          maxConnLifetime: 1h
    
    # Enable Elasticsearch for visibility (optional for demo)
    elasticsearch:
      version: v7
      url:
        scheme: http
        host: elasticsearch-service
        port: 9200
      indices:
        visibility: temporal_visibility
        secondary_visibility: temporal_visibility_secondary

  # Node selector for dedicated Temporal nodes
  nodeSelector:
    role: temporal-server
  
  # Tolerate the taint we set on Temporal nodes
  tolerations:
  - key: temporal-server
    operator: Equal
    value: "true"
    effect: NoSchedule

# Frontend (UI) configuration
frontend:
  replicaCount: 1
  service:
    type: LoadBalancer
    port: 8080
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

# History service
history:
  replicaCount: 1
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

# Matching service  
matching:
  replicaCount: 1
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

# Worker service
worker:
  replicaCount: 1
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

# Elasticsearch for demo (simplified single node)
elasticsearch:
  enabled: true
  replicas: 1
  minimumMasterNodes: 1
  
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 1Gi
  
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    storageClassName: ssd
    resources:
      requests:
        storage: 30Gi
  
  esConfig:
    elasticsearch.yml: |
      cluster.name: temporal-es-cluster
      discovery.type: single-node
      xpack.security.enabled: false
      cluster.routing.allocation.disk.threshold_enabled: true
      cluster.routing.allocation.disk.watermark.low: 512mb
      cluster.routing.allocation.disk.watermark.high: 256mb
      cluster.routing.allocation.disk.watermark.flood_stage: 128mb

# Cloud SQL Proxy sidecar
cloudSqlProxy:
  enabled: true
  instances:
  - project: ${PROJECT_ID}
    region: ${REGION}
    instance: ${ENVIRONMENT}-temporal-db
  
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

# Service monitor for Prometheus (if monitoring enabled)
serviceMonitor:
  enabled: false

# Prometheus rules
prometheusRule:
  enabled: false